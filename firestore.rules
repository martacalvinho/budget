rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Salary history
    match /salaryHistory/{historyId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && request.resource.data.createdBy == request.auth.uid;
      allow update: if isAuthenticated() 
        && request.resource.data.updatedBy == request.auth.uid;
      allow delete: if isAuthenticated();
    }
    
    // Categories
    match /fixedCategories/{categoryId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    match /flexibleCategories/{categoryId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Purchases
    match /purchases/{purchaseId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && request.resource.data.createdBy == request.auth.uid;
      allow update: if isAuthenticated() 
        && request.resource.data.updatedBy == request.auth.uid;
      allow delete: if isAuthenticated();
    }
  }
}